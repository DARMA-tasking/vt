name: PR tests (gcc-6, ubuntu, mpich)

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - develop
      - 1.*
  pull_request:

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      REPO: lifflander1/vt
      ARCH: amd64
      UBUNTU: 18.04
      COMPILER_TYPE: gnu
      COMPILER: gcc-6
      BUILD_TYPE: release
      ULIMIT_CORE: 0
      VT_LB: 1
      VT_TRACE: 0
      VT_TRACE_RT: 0
      VT_MIMALLOC: 0
      VT_DOCS: 0
      VT_ASAN: 0
      CACHE: ~/.local/cache/

    steps:
    - name: Prepare caching timestamp
      id: cache_ts
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - uses: actions/cache@v1
      env:
        cache-name: ubuntu-gcc-6-ccache-new
      with:
        path: ~/.local/cache/${{ env.ARCH }}-ubuntu-${{ env.UBUNTU }}-${{ env.COMPILER }}-cache/ccache
        key: ${{ runner.os }}-${{ env.cache-name }}-${ { steps.cache_ts.outputs.timestamp } }-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - uses: actions/checkout@v2
    - name: Docker Pull Base Image
      shell: bash
      run: docker-compose pull --ignore-pull-failures ubuntu-cpp-clean
    - name: Build the Docker image
      run: docker-compose run ubuntu-cpp-clean
    - name: Docker Push Base Image
      if: success()
      continue-on-error: true
      shell: bash
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} \
                     -p ${{ secrets.DOCKER_PASSWORD }}
        docker-compose push ubuntu-cpp-clean
    - name: Path
      shell: bash
      run: |
        ls ~/.local/cache
    - name: Path2
      shell: bash
      run: |
        ls ~/.local/cache/${{ env.ARCH }}-ubuntu-${{ env.UBUNTU }}-${{ env.COMPILER }}-cache
    - name: Path3
      shell: bash
      run: |
        ls ~/.local/cache/${{ env.ARCH }}-ubuntu-${{ env.UBUNTU }}-${{ env.COMPILER }}-cache/ccache
