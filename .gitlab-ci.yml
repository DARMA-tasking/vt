# This runs testing for intel 19 and platforms which are not available
# in the github testing environment

stages:
  - build

variables:
  ASC_WCID: "fy150069"

# before_script:

intel19:
  variables:
    OMPI_FC: "ifort"
    FC: "ifort"
    OMPI_CC: "icc"
    CC: "icc"
    OMPI_CXX: "icpc"
    CXX: "icpc"
    SCHEDULER_PARAMETERS: "--account=${ASC_WCID} --partition=short,batch --time=1:00:00 --nodes=1"
  stage: build
  script:
    - module load cde/v2/cmake/3.19.2
    - module load cde/v2/ninja/1.10.1
    - module unload intel/16.0
    - module load cde/v2/compiler/intel/19.1.2
    - module unload openmpi-intel/1.10
    - module load cde/v2/intel/19.1.2/openmpi/4.0.5
    - ci/build_cpp.sh $CI_PROJECT_DIR $CI_PROJECT_DIR/vt_build_intel19
  only:
    refs:
      - develop
  tags:
    - intel19_batch

nvcc_wrapper-vortex:
  variables:
    OMPI_FC: "gfortran"
    OMPI_CC: "gcc"
    OMPI_CXX: "nvcc_wrapper"
  stage: build
  script:
    - module load sparc-dev/cuda-10.1.243_gcc-7.3.1_spmpi-rolling
    - module load ninja/1.9.0
    - mkdir -p /tmp/$USER
    - ci/build_cpp.sh $CI_PROJECT_DIR $CI_PROJECT_DIR/vt_build_nvcc_wrapper
  only:
    refs:
      - develop
  tags:
    - ppc64le 


arm-stria:
  variables:
    CC: "gcc"
    CXX: "c++"
  stage: build
  script:
    - module unload devpack-gnu7
    - module load devpack-arm
    - module load cde/v2.1/ninja
    - module swap cmake cmake/3.20.5
    - ci/build_cpp.sh $CI_PROJECT_DIR $CI_PROJECT_DIR/vt_build_gcc
  only:
    refs:
      - develop
  tags:
    - aarch64 
