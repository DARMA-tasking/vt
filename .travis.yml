sudo: true
dist: bionic
language: cpp
cache:
  directories:
  - mpich
cache: ccache
matrix:
  include:
  - os: linux
    addons:
      apt:
        sources:
          - llvm-toolchain-3.9
        packages:
          - clang-3.9
          - libomp-dev
          - libc++-dev
          - libc++abi-dev
          - ninja-build
          - libmpich-dev
    env:
      - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
      - CPP_LINKER_FLAGS="-stdlib=libc++ -lc++abi"
      - CPP_CXX_FLAGS="-stdlib=libc++"
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
        - libomp-dev
        - ninja-build
        - libmpich-dev
    env:
      - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
#  - os: linux
#    addons:
#      apt:
#        sources:
#        - ubuntu-toolchain-r-test
#        packages:
#        - g++-7
#        - libomp-dev
#    env:
#      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
#  - os: linux
#    addons:
#      apt:
#        sources:
#        - ubuntu-toolchain-r-test
#        packages:
#        - g++-8
#        - libomp-dev
#    env:
#      - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
addons:
  apt:
    packages:
    - lcov
    - mpich
    - curl
before_install:
- eval "${MATRIX_EVAL}"
- export CHECKPOINT=$PWD/checkpoint
- export MPICH_ROOT=$PWD/mpich/bin/
- export PATH=$PWD/mpich/bin/:$PATH
- ccache -s
- echo $PATH
- wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz -O /tmp/gtest.tar.gz
- tar -xvf /tmp/gtest.tar.gz
- git clone -b release-1.8.1 --depth 1 https://github.com/google/googletest.git
- export GTEST=$PWD/googletest
- git clone -b develop --depth 1 https://github.com/DARMA-tasking/checkpoint.git
- export DETECTOR=$PWD/detector
- git clone -b master --depth 1 https://github.com/DARMA-tasking/detector.git
#- sh ./scripts/get_mpich.sh
install:
- cd $GTEST
- mkdir build
- cd build
- cmake -DCMAKE_INSTALL_PREFIX=$GTEST/install -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_FLAGS=$CPP_CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$CPP_LINKER_FLAGS ..
- make
- make install
- cd $DETECTOR
- mkdir build
- cd build
- cmake -DCMAKE_INSTALL_PREFIX=$DETECTOR/install -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_FLAGS=$CPP_CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$CPP_LINKER_FLAGS  ..
- make
- make install
- cd $CHECKPOINT
- mkdir build
- cd build
- cmake -DCMAKE_INSTALL_PREFIX=$CHECKPOINT/install -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -Ddetector_DIR=$DETECTOR/install -DCMAKE_CXX_FLAGS=$CPP_CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$CPP_LINKER_FLAGS  ..
- make
- make install
script:
- cd $TRAVIS_BUILD_DIR
- mkdir build
- cd build
- which mpicc
- which mpic++
- which mpicxx
- cmake -GNinja -DVT_NO_BUILD_EXAMPLES=1 -Dgtest_DIR=$GTEST/install -DGTEST_ROOT=$GTEST/install -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DMPI_C_COMPILER=mpicc -DMPI_CXX_COMPILER=mpicxx -Ddetector_DIR=$DETECTOR/install -DCMAKE_CXX_FLAGS=$CPP_CXX_FLAGS -DCMAKE_EXE_LINKER_FLAGS=$CPP_LINKER_FLAGS -DCMAKE_PREFIX_PATH="$GTEST/install" -Dcheckpoint_DIR=$CHECKPOINT/install  ../
- ninja
- make test
- ctest --rerun-failed -V
