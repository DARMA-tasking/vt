###############################################################################
############## Warning this is a generated file---do not modify ###############
###############################################################################

name: PR tests spack-package (gcc-10, ubuntu, openmpi, no LB, spack-package)

trigger:
  - develop

pr: none

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  REPO: lifflander1/vt
  ARCH: amd64
  UBUNTU: 20.04
  COMPILER_TYPE: gnu
  COMPILER: gcc-10
  BUILD_TYPE: release
  ULIMIT_CORE: 0
  CODE_COVERAGE: 0
  VT_LB: 0
  VT_TRACE: 0
  VT_TRACE_RT: 0
  VT_TRACE_ONLY: 1
  VT_MIMALLOC: 0
  VT_DOCS: 0
  VT_ASAN: 0
  VT_WERROR: 1
  VT_POOL: 1
  VT_EXTENDED_TESTS: 0
  VT_UNITY_BUILD: 1
  VT_FCONTEXT: 0
  VT_ZOLTAN: 0
  VT_CI_BUILD: 1
  VT_DIAGNOSTICS: 1

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-22.04'
    timeoutInMinutes: 180
    steps:
      - task: Bash@3
        displayName: Check for changes in containers
        inputs:
          targetType: 'inline'
          script: |
            val=$(./scripts/check_containers.sh)
            echo "##vso[task.setvariable variable=compose_command]$val"
      - task: DockerCompose@0
        displayName: Pull container
        inputs:
          containerregistrytype: 'Container Registry'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: '$(compose_command) ubuntu-spack'
      - task: DockerCompose@0
        displayName: Build container
        inputs:
          containerregistrytype: 'Container Registry'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'run ubuntu-spack'
      - task: DockerCompose@0
        displayName: Push container to registry
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
        inputs:
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'dockerRegistryConnection1'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'push ubuntu-spack'
