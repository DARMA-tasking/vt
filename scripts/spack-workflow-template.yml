[% warning %]

name: [% test_type %] ([% test_configuration %])

[% triggers %]

[% pr_pattern %]

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  REPO: [% repo %]
  ARCH: [% arch %]
[% linux_env %]
  COMPILER_TYPE: [% compiler_type %]
  COMPILER: [% compiler %]
  HOST_COMPILER: [% IF host_compiler %][% host_compiler %][% ELSE %][% compiler %][% END %]
  BUILD_TYPE: [% build_type %]
  ULIMIT_CORE: [% ulimit_core %]
  VT_CODE_COVERAGE: [% vt_code_coverage %]
  VT_LB: [% vt_lb %]
  VT_TRACE: [% vt_trace %]
  VT_TRACE_RT: [% vt_trace_rt %]
  VT_TRACE_ONLY: [% vt_trace_only %]
  VT_MIMALLOC: [% vt_mimalloc %]
  VT_DOCS: [% vt_docs %]
  VT_ASAN: [% vt_asan %]
  VT_WERROR: [% vt_werror %]
  VT_POOL: [% vt_pool %]
  VT_EXTENDED_TESTS: [% vt_extended_tests %]
  VT_UNITY_BUILD: [% vt_unity_build %]
  VT_FCONTEXT: [% vt_fcontext %]
  VT_ZOLTAN: [% vt_zoltan %]
  VT_CI_BUILD: [% vt_ci_build %]
  VT_DIAGNOSTICS: [% vt_diagnostics %]

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      [% workflow_runs_on %]
    timeoutInMinutes: 180
    steps:
      - task: Bash@3
        displayName: Check for changes in containers
        inputs:
          targetType: 'inline'
          script: |
            val=$(./scripts/check_containers.sh)
            echo "##vso[task.setvariable variable=compose_command]$val"
      - task: DockerCompose@1
        displayName: Pull container
        inputs:
          projectName: darma-tasking-vt
          containerregistrytype: 'Container Registry'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: '$(compose_command) [% docker_target %]'
      - task: DockerCompose@1
        displayName: Build container
        inputs:
          projectName: darma-tasking-vt
          containerregistrytype: 'Container Registry'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'run [% docker_target %]'
      - task: DockerCompose@1
        displayName: Push container to registry
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
        inputs:
          projectName: darma-tasking-vt
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: 'dockerRegistryConnection1'
          dockerComposeFile: '**/docker-compose.yml'
          action: 'Run a Docker Compose command'
          dockerComposeCommand: 'push [% docker_target %]'
