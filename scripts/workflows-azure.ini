
test_type = "PR tests"
vt_lb = 1
vt_trace = 0
vt_trace_rt = 0
vt_mimalloc = 0
vt_docs = 0
vt_asan = 0
vt_pool = 1
vt_extended_tests = 1
vt_unity_build = 1
vt_zoltan = 0
vt_ci_build = 1
ulimit_core = 0
code_coverage = 0
build_type = release
repo = lifflander1/vt
arch = amd64
is_ubuntu = 1
distro = 18.04
linux = ubuntu
cache_dir = "~/.local/cache/"
cache_name = "[% linux %]-[% compiler %]-cache"
docker_target = "[% linux %]-cpp-clean"
triggers = "trigger:\\n  branches:\\n    include:\\n      - develop\\n      - 1.0.0*"
warning = "###############################################################################\\n############## Warning this is a generated file---do not modify ###############\\n###############################################################################"
job_name = build
workflow_runs_on = ubuntu-latest
build_root = $(ARCH)-[% linux %]-$(UBUNTU)-$(COMPILER)-cache
linux_env = "  UBUNTU: [% distro %]"
vt_diagnostics = 1
pr_pattern = "pr:\\n  branches:\\n   include:\\n     - '*'\\n"

[PR-tests-intel-18-03]
test_configuration = "intel 18.03, ubuntu, mpich"
compiler_type = intel
compiler = icc-18
cache_name = ubuntu-intel-18-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-intel-18-ubuntu-mpich.yml
vt_extended_tests = 0

[PR-tests-intel-18-03-extended]
test_type = "PR tests extended"
test_configuration = "intel 18.03, ubuntu, mpich"
compiler_type = intel
compiler = icc-18
cache_name = ubuntu-intel-18-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-intel-18-ubuntu-mpich-extended.yml
pr_pattern = "\\n"
triggers = "\\n"
job_name = build_optional

[PR-tests-nvcc-10-1]
test_configuration = "nvidia cuda 10.1, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-10
cache_name = ubuntu-nvidia-10-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-nvidia-10-ubuntu-mpich.yml
vt_extended_tests = 0
job_name = build_optional
vt_diagnostics = 0

[PR-tests-nvcc-10-1-extended]
test_type = "PR tests extended"
test_configuration = "nvidia cuda 10.1, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-10
cache_name = ubuntu-nvidia-10-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-nvidia-10-ubuntu-mpich-extended.yml
pr_pattern = "\\n"
triggers = "\\n"
job_name = build_optional

[PR-tests-nvcc-11-0]
test_configuration = "nvidia cuda 11.0, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-11
cache_name = ubuntu-nvidia-11-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-nvidia-11-ubuntu-mpich.yml
vt_extended_tests = 0
job_name = build_optional
vt_diagnostics = 0

[PR-tests-nvcc-11-0-extended]
test_type = "PR tests extended"
test_configuration = "nvidia cuda 11.0, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-11
cache_name = ubuntu-nvidia-11-cache
vt_trace = 1
vt_pool = 0
output_name = ci/azure/azure-nvidia-11-ubuntu-mpich-extended.yml
pr_pattern = "\\n"
triggers = "\\n"
job_name = build_optional

[PR-tests-gcc-5]
test_configuration = "gcc-5, ubuntu, mpich"
compiler_type = gnu
compiler = gcc-5
output_name = ci/azure/azure-gcc-5-ubuntu-mpich.yml
cache_name = "[% linux %]-[% compiler %]-cache"

[PR-tests-gcc-6]
test_configuration = "gcc-6, ubuntu, mpich"
compiler_type = gnu
compiler = gcc-6
output_name = ci/azure/azure-gcc-6-ubuntu-mpich.yml

[PR-tests-gcc-7]
test_configuration = "gcc-7, ubuntu, mpich, trace runtime, LB"
compiler_type = gnu
compiler = gcc-7
vt_trace = 1
vt_trace_rt = 1
code_coverage = 1
output_name = ci/azure/azure-gcc-7-ubuntu-mpich.yml
cache_name = "[% linux %]-[% compiler %]-cache"

[PR-tests-gcc-8]
test_configuration = "gcc-8, ubuntu, mpich, address sanitizer"
compiler_type = gnu
compiler = gcc-8
vt_trace = 1
vt_pool = 0
vt_asan = 1
output_name = ci/azure/azure-gcc-8-ubuntu-mpich.yml

[PR-tests-gcc-9]
test_configuration = "gcc-9, ubuntu, mpich, zoltan"
compiler_type = gnu
compiler = gcc-9
vt_zoltan = 1
distro = 20.04
output_name = ci/azure/azure-gcc-9-ubuntu-mpich.yml

[PR-tests-gcc-10]
test_configuration = "gcc-10, ubuntu, openmpi, no LB"
compiler_type = gnu
compiler = gcc-10
vt_lb = 0
distro = 20.04
docker_target = "[% linux %]-cpp-clean-openmpi"
output_name = ci/azure/azure-gcc-10-ubuntu-openmpi.yml

[PR-tests-clang-39]
test_configuration = "clang-3.9, ubuntu, mpich"
compiler_type = clang
compiler = clang-3.9
output_name = ci/azure/azure-clang-3.9-ubuntu-mpich.yml

[PR-tests-clang-5]
test_configuration = "clang-5.0, ubuntu, mpich"
compiler_type = clang
compiler = clang-5.0
vt_trace = 1
output_name = ci/azure/azure-clang-5.0-ubuntu-mpich.yml

[PR-tests-clang-8]
test_configuration = "clang-8, alpine, mpich"
compiler_type = clang
compiler = clang-8
is_ubuntu = 0
linux = alpine
linux_env =""
output_name = ci/azure/azure-clang-8-alpine-mpich.yml
build_root = $(ARCH)-[% linux %]-$(COMPILER)-cache
